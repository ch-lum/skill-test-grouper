{
  "Question 0": "'''\n    Function that adds a title to each person's \n    name, or \"Dr.\" if no title was provided.\n\n    args:\n        *args (strings): variable number of names\n        title (string, optional): title to precede each \n            name, default is \"Dr.\"\n    returns:\n        list: list of strings with title added to each name\n\n    >>> add_title(\"Mike\")\n    ['Dr. Mike']\n    >>> add_title(\"John\", \"Jane\", \"Joe\")\n    ['Dr. John', 'Dr. Jane', 'Dr. Joe']\n    >>> add_title(\"Jack\", \"John\", \"Jeff\", title=\"Mr.\")\n    ['Mr. Jack', 'Mr. John', 'Mr. Jeff']\n    '''",
  "Question 1": "'''\n    Function that invites people if they reside in \n    certain cities\n\n    args:\n        cities (list): list of city names\n        **kwargs: names and cities of residence\n            key: person's name\n            value (string): city of residence\n    returns:\n        list of strings indicating who's invited\n\n    >>> invite([\"NYC\", \"SD\"], John=\"LA\", Jack=\"SD\", Jeff=\"NYC\")\n    ['Jack is invited', 'Jeff is invited']\n    >>> invite([\"NYC\", \"SD\"], Jill=\"SF\", Jen=\"LA\", Jane=\"SLO\")\n    []\n    '''",
  "Question 2": "'''\n    Function that checks whether two functions return\n    the same output for two inputs\n\n    args:\n        num1 (int): first input\n        num2 (int): second input\n        f1 (func): first function\n        f2 (func): second function\n    returns:\n        True if the functions return the same output\n        for both inputs, False otherwise\n\n    >>> equal_funcs(5, -5, lambda x: x * -1 if x < 0 else x, abs)\n    True\n    >>> equal_funcs(5, -5, lambda x: x * -1, abs)\n    False\n    '''",
  "Question 3": "'''\n    Function that recursively calculates factorial of a number\n\n    args:\n        n (int): positive integer\n    returns:\n        n! (n factorial)\n    \n    >>> factorial(1)\n    1\n    >>> factorial(5) # 5 * 4 * 3 * 2 * 1 = 120\n    120\n    '''"
}